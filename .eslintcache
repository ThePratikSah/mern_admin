[{"C:\\Users\\prati\\Downloads\\mern_auth\\client\\src\\index.js":"1","C:\\Users\\prati\\Downloads\\mern_auth\\client\\src\\App.jsx":"2","C:\\Users\\prati\\Downloads\\mern_auth\\client\\src\\context\\UserContext.js":"3","C:\\Users\\prati\\Downloads\\mern_auth\\client\\src\\component\\navbar\\NavBar.jsx":"4","C:\\Users\\prati\\Downloads\\mern_auth\\client\\src\\component\\Home.jsx":"5","C:\\Users\\prati\\Downloads\\mern_auth\\client\\src\\component\\Header.jsx":"6","C:\\Users\\prati\\Downloads\\mern_auth\\client\\src\\component\\Login.jsx":"7","C:\\Users\\prati\\Downloads\\mern_auth\\client\\src\\component\\Button\\Button.jsx":"8","C:\\Users\\prati\\Downloads\\mern_auth\\client\\src\\component\\ForgotPassword.jsx":"9"},{"size":219,"mtime":1606989059834,"results":"10","hashOfConfig":"11"},{"size":1975,"mtime":1607018585495,"results":"12","hashOfConfig":"11"},{"size":75,"mtime":1606938855419,"results":"13","hashOfConfig":"11"},{"size":466,"mtime":1607016700047,"results":"14","hashOfConfig":"11"},{"size":316,"mtime":1607016700208,"results":"15","hashOfConfig":"11"},{"size":152,"mtime":1606988934897,"results":"16","hashOfConfig":"11"},{"size":2206,"mtime":1607019520300,"results":"17","hashOfConfig":"11"},{"size":259,"mtime":1607016297600,"results":"18","hashOfConfig":"11"},{"size":491,"mtime":1607021146390,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1fz9vgy",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\prati\\Downloads\\mern_auth\\client\\src\\index.js",[],["41","42"],"C:\\Users\\prati\\Downloads\\mern_auth\\client\\src\\App.jsx",["43"],"import React, {useState, useEffect} from \"react\";\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\nimport UserContext from \"./context/UserContext\";\nimport Home from \"./component/Home\";\nimport Header from \"./component/Header\";\n\nfunction App() {\n  \n  const [user, setUser] = useState({\n    isAuth: false,\n    token: undefined,\n    user: undefined,\n    expiryTime: undefined\n  });\n  \n  \n  //TODO: set timer in this function\n  const autoLogin = () => {\n    //check for the token in the localStorage\n    let token = localStorage.getItem(\"auth-token\");\n    //check for the expiredTime in localStorage\n    let expTime = localStorage.getItem(\"exp-time\");\n    if (token === null || expTime === null || expTime===\"\") {\n      //if no token key found, set it to an empty string\n      localStorage.setItem(\"auth-token\", \"\");\n      localStorage.setItem(\"exp-time\", \"\");\n      token = \"\";\n      expTime = \"\";\n      return;\n    }\n    \n    let currentTime = new Date().toISOString();\n    let expiryTime = new Date(expTime).toISOString();\n    if ((expiryTime > currentTime) && token) {\n      setUser({\n        ...user,\n        isAuth: true,\n        token,\n        expiryTime\n      });\n    } else {\n      token = \"\";\n    }\n  }\n\n  useEffect(() => {\n    autoLogin();\n  }, []);\n  \n  //logic for logout\n  const logOut = () => {\n    setUser({\n      ...user,\n      token: undefined,\n      user: undefined,\n      isAuth: false,\n      expiryTime: undefined\n    });\n    \n    //removing the token from localStorage\n    const token = localStorage.getItem(\"auth-token\");\n    if (token) {\n      localStorage.setItem(\"auth-token\", \"\");\n      localStorage.setItem(\"exp-time\", \"\");\n    }\n  }\n  \n  return (\n    <>\n      <BrowserRouter>\n        <UserContext.Provider value={{user, setUser, logOut}}>\n          <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n        </UserContext.Provider>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;","C:\\Users\\prati\\Downloads\\mern_auth\\client\\src\\context\\UserContext.js",[],"C:\\Users\\prati\\Downloads\\mern_auth\\client\\src\\component\\navbar\\NavBar.jsx",[],"C:\\Users\\prati\\Downloads\\mern_auth\\client\\src\\component\\Home.jsx",[],"C:\\Users\\prati\\Downloads\\mern_auth\\client\\src\\component\\Header.jsx",[],"C:\\Users\\prati\\Downloads\\mern_auth\\client\\src\\component\\Login.jsx",["44"],"import React, {useContext, useState} from \"react\";\r\nimport Axios from \"axios\";\r\nimport UserContext from \"../context/UserContext\";\r\nimport \"./Login.css\";\r\nimport Button from \"./Button/Button\";\r\nimport ForgotPassword from \"./ForgotPassword\";\r\n\r\nfunction Login() {\r\n  \r\n  const {user, setUser} = useContext(UserContext);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isForget, setIsForget] = useState(false);\r\n  \r\n  //login admin\r\n  const loginAdmin = async () => {\r\n    \r\n    setIsLoading((isLoading) => !isLoading);\r\n    \r\n    const email = document.getElementById(\"email\").value;\r\n    const password = document.getElementById(\"password\").value;\r\n    \r\n    if (!email || !password) {\r\n      alert(\"Empty\");\r\n      return;\r\n    }\r\n    \r\n    const url = \"https://bakeology-alpha-stage.herokuapp.com/auth/user/login\";\r\n    let res;\r\n    try {\r\n      res = await Axios.post(url, {\r\n        \"email\": email,\r\n        \"password\": password\r\n      }, {\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        }\r\n      });\r\n    } catch (err) {\r\n      alert(`Invalid credentials ${err.message}`);\r\n      setIsLoading((isLoading) => !isLoading);\r\n      return;\r\n    }\r\n    \r\n    let {token, userId} = res.data;\r\n    let tomorrow = new Date();\r\n    tomorrow.setDate(tomorrow.getDate() + 1)\r\n    setUser({\r\n      ...user,\r\n      isAuth: true,\r\n      token,\r\n      user: userId,\r\n      expiryTime: tomorrow\r\n    });\r\n    localStorage.setItem(\"auth-token\", token);\r\n    localStorage.setItem(\"exp-time\", tomorrow.toISOString());\r\n  }\r\n  \r\n  return (\r\n    isForget ? <ForgotPassword loginComponent={setIsForget} /> :\r\n      <div className=\"LoginComponent__parent\">\r\n        <div className=\"LoginComponent__card\">\r\n          <h1>Welcome Admin</h1>\r\n          <input id=\"email\" type=\"email\" placeholder=\"email\"/>\r\n          <input id=\"password\" type=\"password\"\r\n                 placeholder=\"******\"/>\r\n          <Button onclick={loginAdmin} value={\"Login\"}\r\n                  light={true}/>\r\n          <a onClick={() => setIsForget(true)}>Forgot password</a>\r\n          {isLoading ? <div className=\"loader\"></div> : null}\r\n        </div>\r\n      </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default Login;","C:\\Users\\prati\\Downloads\\mern_auth\\client\\src\\component\\Button\\Button.jsx",[],"C:\\Users\\prati\\Downloads\\mern_auth\\client\\src\\component\\ForgotPassword.jsx",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":48,"column":6,"nodeType":"51","endLine":48,"endColumn":8,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":68,"column":11,"nodeType":"55","endLine":68,"endColumn":48},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'autoLogin'. Either include it or remove the dependency array.","ArrayExpression",["58"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [autoLogin]",{"range":"61","text":"62"},[1265,1267],"[autoLogin]"]